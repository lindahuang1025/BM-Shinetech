//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BM.Automation.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("BM.Automation.Properties.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to public DbSet&lt;{{Template}}&gt; {{Template}} { get; set; }.
        /// </summary>
        internal static string DbSql {
            get {
                return ResourceManager.GetString("DbSql", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using BM.Common.Log;
        ///using BM.DAL;
        ///using BM.ViewModel;
        ///using BM.ViewModel.ModelConvert;
        ///using BM.ViewModel.ViewModel;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///
        ///namespace BM.BLL
        ///{
        ///    public class {{Template}}BLL
        ///    {
        ///        private readonly {{Template}}Agent {{LowerCaseTemplate}}Agent;
        ///        public {{Template}}BLL()
        ///        {
        ///            this.{{LowerCaseTemplate}}Agent = new {{Template}}Agent();
        ///        }
        ///
        ///
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TemplateBLL {
            get {
                return ResourceManager.GetString("TemplateBLL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using BM.BLL;
        ///using BM.ViewModel;
        ///using BM.ViewModel.ViewModel;
        ///using Newtonsoft.Json.Linq;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Threading.Tasks;
        ///using System.Web;
        ///using System.Web.Http;
        ///
        ///namespace BM.WebAPI.Controllers
        ///{
        ///    [Authorize]
        ///    [RoutePrefix(&quot;api/{{LowerCaseTemplate}}&quot;)]
        ///    public class {{Template}}Controller : ApiController
        ///    {
        ///        private readonly {{Template}}BLL {{LowerCaseTemplate}}BLL;
        ///        public {{Template}}Controller [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TemplateController {
            get {
                return ResourceManager.GetString("TemplateController", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using BM.DataModel;
        ///using BM.ViewModel.ViewModel;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///
        ///namespace BM.ViewModel.ModelConvert
        ///{
        ///    public static partial class ModelConvert
        ///    {
        ///        public static {{Template}}Model ToModel(this {{Template}} entity)
        ///        {
        ///            return new {{Template}}Model()
        ///            {
        ///                Id = entity.Id,
        ///                CreateBy = entity.CreateBy,
        ///                Creat [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TemplateConvertModel {
            get {
                return ResourceManager.GetString("TemplateConvertModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to export default function ($scope, $stateParams, $q, $all, $location) {
        ///    &quot;ngInject&quot;;
        ///    const Id = parseInt($stateParams.id || 0);
        ///
        ///    $scope.model = {};
        ///
        ///    $scope.init = () =&gt; {
        ///        getById().then(result =&gt; {
        ///            $scope.model = result;
        ///        });
        ///    }
        ///
        ///    function getById() {
        ///        let promise = new Promise((resolve, reject) =&gt; {
        ///            resolve({});
        ///        });
        ///        if (Id == 0) {
        ///            return promise;
        ///        }
        ///        promise = new Promise((resolve,  [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TemplateCtrlDetail {
            get {
                return ResourceManager.GetString("TemplateCtrlDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to import {
        ///    gridColumnFilter
        ///} from &apos;./../../common/common.helper&apos;;
        ///import gridOptionSetting from &quot;./../../enum/gridOptionSetting&quot;;
        ///import columnsDef from &quot;./../../template/columnSetting/{{LowerCaseTemplate}}.column&quot;;
        ///
        ///export default function ($scope, $uibModal, $all, uiGridConstants, $location) {
        ///    &quot;ngInject&quot;;
        ///
        ///    const columns = gridColumnFilter(columnsDef, uiGridConstants);
        ///    $scope.gridOptions = {
        ///        data: [],
        ///        enableFiltering: true,
        ///        paginationPageSizes: gridOption [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TemplateCtrlList {
            get {
                return ResourceManager.GetString("TemplateCtrlList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using BM.DataModel;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Data.Entity;
        ///using System.Data.Entity.Migrations;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///
        ///namespace BM.DAL
        ///{
        ///    public class {{Template}}Agent
        ///    {
        ///        public async Task AddOrUpdate({{Template}} entity)
        ///        {
        ///            using (var context = new BMDbContext())
        ///            {
        ///                context.{{Template}}.AddOrUpdate(entity);
        ///                await context.SaveChanges [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TemplateDAL {
            get {
                return ResourceManager.GetString("TemplateDAL", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using System;
        ///using System.Collections.Generic;
        ///using System.ComponentModel.DataAnnotations;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///
        ///namespace BM.DataModel
        ///{
        ///    public class {{Template}}
        ///    {
        ///        [Key]
        ///        public long Id { get; set; }
        ///
        ///        [Required]
        ///        [StringLength(256)]
        ///        public string CreateBy { get; set; }
        ///
        ///        [Required]
        ///        public DateTime CreateDate { get; set; }
        ///
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string TemplateDataModel {
            get {
                return ResourceManager.GetString("TemplateDataModel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to export default [
        ///    {
        ///        name: &quot;Created By&quot;,
        ///        field: &quot;CreateBy&quot;
        ///    }, {
        ///        name: &quot;Created Date&quot;,
        ///        field: &quot;CreateDate&quot;,
        ///        type: &apos;date&apos;,
        ///        cellFilter: &quot;jmsDate:true&quot;
        ///    }, {
        ///        name: &quot;Operation&quot;,
        ///        cellTemplate: require(&apos;./../../template/gridOperate/common.cell.template.html&apos;)
        ///    }
        ///];.
        /// </summary>
        internal static string TemplateGridColumn {
            get {
                return ResourceManager.GetString("TemplateGridColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to export default function ($stateProvider, $urlRouterProvider) {
        ///    $urlRouterProvider.when(&quot;/app/{{LowerCaseTemplate}}&quot;, &quot;/app/{{LowerCaseTemplate}}/list&quot;);
        ///    $stateProvider
        ///        .state(&quot;app.{{LowerCaseTemplate}}.list&quot;, {
        ///            url: &quot;/list&quot;,
        ///            templateUrl: &quot;app/views/{{LowerCaseTemplate}}/{{LowerCaseTemplate}}.list.html&quot;,
        ///            controller: &quot;{{LowerCaseTemplate}}ListCtrl&quot;,
        ///            ncyBreadcrumb: {
        ///                label: &apos;Listing&apos;
        ///            }
        ///        })
        ///        .sta [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TemplateRoute {
            get {
                return ResourceManager.GetString("TemplateRoute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to export default function {{LowerCaseTemplate}}Agent($http, $q) {
        ///    const baseUrl = configuration.baseUrl;
        ///    return {
        ///        query: function (keyword, pageIndex, pageSize) {
        ///            var url = `${baseUrl}api/{{LowerCaseTemplate}}/query`;
        ///            return $http({
        ///                url: url,
        ///                data: {
        ///                    keyword: keyword,
        ///                    pageIndex: pageIndex,
        ///                    pageSize: pageSize
        ///                },
        ///                method: &apos;POST&apos;
        ///          [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TemplateService {
            get {
                return ResourceManager.GetString("TemplateService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div list-container
        ///     ng-init=&quot;init()&quot;&gt;
        ///    &lt;form novalidate
        ///          name=&quot;editForm&quot;&gt;
        ///        &lt;div class=&quot;search-panel form-inline&quot;&gt;
        ///            &lt;div class=&quot;form-group&quot;&gt;
        ///                &lt;h4&gt;Detail&lt;/h4&gt;
        ///            &lt;/div&gt;
        ///            &lt;div class=&quot;form-group pull-right&quot;&gt;
        ///                &lt;button class=&quot;btn btn-default&quot;
        ///                        ng-click=&quot;onBackClick()&quot;&gt;Back&lt;/button&gt;
        ///                &lt;button class=&quot;btn btn-success&quot;
        ///                        type=&quot;submit&quot;
        ///                        vali [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TemplateViewDetail {
            get {
                return ResourceManager.GetString("TemplateViewDetail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;div list-container
        ///     ng-init=&quot;init()&quot;&gt;
        ///    &lt;div class=&quot;search-panel form-inline&quot;&gt;
        ///        &lt;div class=&quot;form-group&quot;&gt;
        ///            &lt;input type=&quot;text&quot;
        ///                   class=&quot;form-control&quot;
        ///                   ng-model=&quot;keyword&quot;
        ///                   ng-keydown=&quot;onSearchKeydown(event)&quot;
        ///                   placeholder=&quot;keyword&quot;&gt;
        ///            &lt;button class=&quot;btn btn-default&quot;
        ///                    ng-click=&quot;onSearchClick()&quot;&gt;
        ///                Search
        ///            &lt;/button&gt;
        ///        &lt;/div&gt;
        ///        &lt;div class=&quot;f [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string TemplateViewList {
            get {
                return ResourceManager.GetString("TemplateViewList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to using BM.DataModel;
        ///using System;
        ///using System.Collections.Generic;
        ///using System.Linq;
        ///using System.Text;
        ///using System.Threading.Tasks;
        ///
        ///namespace BM.ViewModel.ViewModel
        ///{
        ///    public class {{Template}}Model: {{Template}}
        ///    {
        ///
        ///    }
        ///}
        ///.
        /// </summary>
        internal static string TemplateViewModel {
            get {
                return ResourceManager.GetString("TemplateViewModel", resourceCulture);
            }
        }
    }
}
